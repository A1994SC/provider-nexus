// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnonymousInitParameters struct {

	// (Boolean) Activate the anonymous access to the repository manager. Default: false
	// Activate the anonymous access to the repository manager. Default: false
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The name of the used realm. Default: "NexusAuthorizingRealm"
	// The name of the used realm. Default: "NexusAuthorizingRealm"
	RealmName *string `json:"realmName,omitempty" tf:"realm_name,omitempty"`

	// (String) The user id used by anonymous access. Default: "anonymous"
	// The user id used by anonymous access. Default: "anonymous"
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type AnonymousObservation struct {

	// (Boolean) Activate the anonymous access to the repository manager. Default: false
	// Activate the anonymous access to the repository manager. Default: false
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Used to identify resource at nexus
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the used realm. Default: "NexusAuthorizingRealm"
	// The name of the used realm. Default: "NexusAuthorizingRealm"
	RealmName *string `json:"realmName,omitempty" tf:"realm_name,omitempty"`

	// (String) The user id used by anonymous access. Default: "anonymous"
	// The user id used by anonymous access. Default: "anonymous"
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type AnonymousParameters struct {

	// (Boolean) Activate the anonymous access to the repository manager. Default: false
	// Activate the anonymous access to the repository manager. Default: false
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The name of the used realm. Default: "NexusAuthorizingRealm"
	// The name of the used realm. Default: "NexusAuthorizingRealm"
	// +kubebuilder:validation:Optional
	RealmName *string `json:"realmName,omitempty" tf:"realm_name,omitempty"`

	// (String) The user id used by anonymous access. Default: "anonymous"
	// The user id used by anonymous access. Default: "anonymous"
	// +kubebuilder:validation:Optional
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`
}

// AnonymousSpec defines the desired state of Anonymous
type AnonymousSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnonymousParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AnonymousInitParameters `json:"initProvider,omitempty"`
}

// AnonymousStatus defines the observed state of Anonymous.
type AnonymousStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnonymousObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Anonymous is the Schema for the Anonymouss API. Use this resource to change the anonymous configuration of the nexus repository manager.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nexus}
type Anonymous struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnonymousSpec   `json:"spec"`
	Status            AnonymousStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnonymousList contains a list of Anonymouss
type AnonymousList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Anonymous `json:"items"`
}

// Repository type metadata.
var (
	Anonymous_Kind             = "Anonymous"
	Anonymous_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Anonymous_Kind}.String()
	Anonymous_KindAPIVersion   = Anonymous_Kind + "." + CRDGroupVersion.String()
	Anonymous_GroupVersionKind = CRDGroupVersion.WithKind(Anonymous_Kind)
)

func init() {
	SchemeBuilder.Register(&Anonymous{}, &AnonymousList{})
}
